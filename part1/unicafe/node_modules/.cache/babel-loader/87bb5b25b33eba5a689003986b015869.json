{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariia_Lapovska\\\\Desktop\\\\fullstackopen\\\\part1\\\\unicafe\\\\src\\\\component\\\\Statistics.js\";\nimport React from 'react';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (isPercentage) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 16\n      }\n    }, \"No feedback given\");\n  } else {\n    const good = props.good;\n\n    const sum = () => good + neutral + bad;\n\n    const average = () => (good - bad) / sum();\n\n    const positive = () => good / sum() * 100;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: 'good',\n      value: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: 'neutral',\n      value: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: 'bad',\n      value: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: 'all',\n      value: sum(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: 'average',\n      value: average(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: 'positive',\n      value: positive(),\n      isPercentage: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/Mariia_Lapovska/Desktop/fullstackopen/part1/unicafe/src/component/Statistics.js"],"names":["React","Statistics","good","neutral","bad","isPercentage","props","sum","average","positive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AAC3C,MAAIC,YAAJ,EAAkB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH,GAFD,MAEO;AACH,UAAMH,IAAI,GAAGI,KAAK,CAACJ,IAAnB;;AACA,UAAMK,GAAG,GAAG,MAAML,IAAI,GAAGC,OAAP,GAAiBC,GAAnC;;AACA,UAAMI,OAAO,GAAG,MAAM,CAACN,IAAI,GAAGE,GAAR,IAAeG,GAAG,EAAxC;;AACA,UAAME,QAAQ,GAAG,MAAMP,IAAI,GAAGK,GAAG,EAAV,GAAe,GAAtC;;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,MAAjB;AAAyB,MAAA,KAAK,EAAEL,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,SAAjB;AAA4B,MAAA,KAAK,EAAEC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAjB;AAAwB,MAAA,KAAK,EAAEC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAjB;AAAwB,MAAA,KAAK,EAAEG,GAAG,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,SAAjB;AAA4B,MAAA,KAAK,EAAEC,OAAO,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,UAAjB;AAA6B,MAAA,KAAK,EAAEC,QAAQ,EAA5C;AAAgD,MAAA,YAAY,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;AACJ,CApBD;;AAsBA,eAAeR,UAAf","sourcesContent":["import React from 'react'\r\n\r\nconst Statistics = ({ good, neutral, bad }) => {\r\n    if (isPercentage) {\r\n        return <p>No feedback given</p>\r\n    } else {\r\n        const good = props.good;\r\n        const sum = () => good + neutral + bad;\r\n        const average = () => (good - bad) / sum();\r\n        const positive = () => good / sum() * 100;\r\n\r\n        return (\r\n            <div>\r\n                <Statistic text={'good'} value={good} />\r\n                <Statistic text={'neutral'} value={neutral} />\r\n                <Statistic text={'bad'} value={bad} />\r\n                <Statistic text={'all'} value={sum()} />\r\n                <Statistic text={'average'} value={average()} />\r\n                <Statistic text={'positive'} value={positive()} isPercentage={true} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistics"]},"metadata":{},"sourceType":"module"}